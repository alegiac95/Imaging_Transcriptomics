
============
Script usage
============

The script has some parameters that can be tuned according to the necessity of the analysis, which can be viewed by calling the help function from the script as :code:`imaging-transcriptomics -h` or :code:`imaging-transcriptomics --help`.

Here we will describe in more details all the parameters of the script. 
The parameters of the script are:

* **-i (--input)**: Scan on which you want to perform the analysis. It is *reccomended* that you provide an absolute path to your scan (e.g., :code:`~/Desktop/myscan.nii.gz`) instead of a relative one (e.g., :code:`myscan.nii.gz`) to avoid errors. The input file *must* be an imaging file in NIfTI format (both :code:`.nii` and :code:`.nii.gz` formats are supported) and have a matrix dimension of 182x218x182. If your image has a different matrix size you can reslice it to match this dimension with your preferred method. (A quick method is to use *fslview* and reslice to match the dimension of the included *MNI152_1mm* brain atlas).

* **-n (--ncomp)**: number of PLS components to use for the analysis. The parameter *must* be an **integer** between 1 and 15, otherwise an error will occurr. *Please note* that in PLS regression the first component is not necessarilty the component explaining the most amout of variance, as in PCA. 

* **-v (--variance)**: total amount of variance you want your components to explain. The code will automatically select the number of components that explain at least the variance you specify. The parameter *must* be an **integer** between 10 and 100, which represents the percentage of explained variance. For example if you specify :code:`-v 30` and the first 3 componets explain 10%, 25% and 3%, repsectively, of the total variance the script will use 2 components, even if they explain 35% of the total variance.

**Note** that the :code:`-v` and :code:`-n` parameters are mutually exclusive and only one has to be provided as argument for the script, otherwise an error will occurr.

Optionally an additional parameter that can be provided is:

* **-o (--output)**: 